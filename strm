from p115client import P115Client
from pathlib import Path
from os import makedirs, remove
from posixpath import dirname
from os.path import abspath, join as joinpath
from glob import iglob
from p115client.tool import export_dir_parse_iter
import os

# 初始化 P115Client，使用 cookie 文件进行身份验证，并设置应用为 "harmony"
client = P115Client(Path("./115-cookies.txt").expanduser(), app="harmony", check_for_relogin=True)

# 远程文件夹的 CID (替换成你的实际 CID)
cid = 3011752007422704845

# 特殊字符的 URL 编码转换表
transtab = {c: f"%{c:02x}" for c in b"%?#"}
translate = str.translate

# 本地用于存储 .strm 文件的目录
local_strm_dir = "./strm_files"

# 确保本地存储 .strm 文件的目录存在，不存在则创建
if not os.path.exists(local_strm_dir):
    makedirs(local_strm_dir)

# 定义常见视频文件的扩展名集合
video_extensions = {'.mkv', '.iso', '.ts', '.mp4', '.avi', '.rmvb', '.wmv', '.m2ts', '.mpg', '.flv', '.rm', '.mov'}

# 第一步：获取远程视频文件，并为每个视频文件生成对应的 .strm 文件路径
remote_strm_files = {}  # 用于存储远程文件对应的 .strm 文件路径和 URL
remote_files = set(export_dir_parse_iter(client, cid))  # 获取远程目录中所有的文件路径

for path in remote_files:
    # 检查文件扩展名是否属于定义的视频文件类型
    if Path(path).suffix.lower() in video_extensions:
        # 生成 URL 并将路径中的特殊字符进行 URL 编码
        url = "http://192.168.2.2:8000" + translate(path, transtab)

        # 构造 .strm 文件的本地路径
        strm_file_path = abspath(joinpath(local_strm_dir, "." + path + ".strm"))
        # 存储远程文件对应的 .strm 文件路径和 URL
        remote_strm_files[strm_file_path] = url

# 第二步：获取本地所有的 .strm 文件
local_strm_files = {os.path.join(local_strm_dir, f) for f in os.listdir(local_strm_dir) if f.endswith(".strm")}

# 第三步：对比远程和本地文件，找出新增和需要删除的文件
# 新增的文件（远程存在且本地不存在）
new_files = set(remote_strm_files.keys()) - local_strm_files
# 需要删除的文件（本地存在但远程已不存在）
local_strm_files = {abspath(joinpath(local_strm_dir, f)) for f in iglob("**/*.strm", root_dir=local_strm_dir, recursive=True)}
deleted_files = local_strm_files - set(remote_strm_files.keys())

# 第四步：处理新增的 .strm 文件，跳过本地已有的
for file in new_files:
    url = remote_strm_files[file]
    try:
        # 检查文件是否已经存在，如果不存在则创建
        if not os.path.exists(file):
            # 确保 .strm 文件对应的目录存在
            if not os.path.exists(dirname(file)):
                makedirs(dirname(file))
            # 将远程文件的 URL 写入对应的 .strm 文件
            with open(file, "w") as f:
                f.write(url)
            # 打印新增文件的信息
            print(f"新增 .strm 文件: {file}")
    except Exception as e:
        print(f"创建 {file} 时出错: {e}")

# 第五步：删除不再存在于远程的 .strm 文件
for file in deleted_files:
    try:
        # 删除本地的 .strm 文件
        remove(file)
        # 打印删除文件的信息
        print(f"删除 .strm 文件: {file}")
    except Exception as e:
        print(f"删除 {file} 时出错: {e}")
